name: Test
on:
  push:
    branches:
      - stevanfreeborn/chore/generate-shard-dynamically
  workflow_dispatch:
    # inputs:
    #   environment:
    #     type: choice
    #     description: 'Environment to run tests against'
    #     options:
    #       - ALPHA
    #       - BETA
    #       - QA
    #       - IST
    #       - VPRIOR
    #       - VNEXT
    #       - PROD
    #     required: true
    #     default: ALPHA
jobs:
  generate_shards:
    name: 'Generate Shards'
    runs-on: ubuntu-latest
    outputs:
      shards: ${{ steps.generate_shards.outputs.shards }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install jq
      - name: Generate shards
        id: generate_shards
        run: |
          #!/bin/bash
          test_directory="tests"

          test_count=0

          while IFS= read -r file; do
            count=$(grep -c "test(" "$file")
            test_count=$((test_count + count))
          done < <(find "$test_directory" -type f -name '*.spec.ts')

          min_shards=10
          max_tests_per_shard=20

          num_of_shards=$((test_count / max_tests_per_shard))

          if [ "$num_of_shards" -eq 0 ]; then
            num_of_shards=$min_shards
          fi

          shards_array=()

          for ((i=1; i<=$num_of_shards; i++)); do
            shards_array+=("$i/$num_of_shards")
          done

          json_shards_array=$(jq -n -c --arg arr "$(printf '%s\n' "${shards_array[@]}")" '$arr | split("\n")')

          # Output the result and the array
          echo "Total tests: $test_count"
          echo "Total shards: $num_of_shards"
          echo "shards=${shards_array[@]}"
          echo "shards=$json_shards_array" >> $GITHUB_OUTPUT
  run_tests:
    name: 'Playwright Tests'
    needs: generate_shards
    env:
      CI: true
      SYS_ADMIN_USERNAME: ${{ secrets.SYS_ADMIN_USERNAME }}
      SYS_ADMIN_PASSWORD: ${{ secrets.SYS_ADMIN_PASSWORD }}
      SYS_ADMIN_FIRST_NAME: ${{ secrets.SYS_ADMIN_FIRST_NAME }}
      SYS_ADMIN_LAST_NAME: ${{ secrets.SYS_ADMIN_LAST_NAME }}
      SYS_ADMIN_EMAIL: ${{ secrets.SYS_ADMIN_EMAIL }}
      TEST_ENV: ${{ github.event.inputs.environment }}
      ALPHA_INSTANCE_URL: ${{ secrets.ALPHA_INSTANCE_URL }}
      BETA_INSTANCE_URL: ${{ secrets.BETA_INSTANCE_URL }}
      QA_INSTANCE_URL: ${{ secrets.QA_INSTANCE_URL }}
      IST_INSTANCE_URL: ${{ secrets.IST_INSTANCE_URL }}
      VPRIOR_INSTANCE_URL: ${{ secrets.VPRIOR_INSTANCE_URL }}
      VNEXT_INSTANCE_URL: ${{ secrets.VNEXT_INSTANCE_URL }}
      PROD_INSTANCE_URL: ${{ secrets.PROD_INSTANCE_URL }}
    runs-on: ubuntu-latest
    # container:
    #   image: mcr.microsoft.com/playwright:v1.39.0-jammy
    strategy:
      fail-fast: false
      matrix:
        project: [chrome, edge]
        shard: ${{ fromJson(needs.generate_shards.outputs.shards) }}
    steps:
      - name: Echo shards
        run: echo ${{ matrix.project }} ${{ matrix.shard }}
