name: Run Test Acceptance Test
on:
  pull_request:
    branches:
      - master
jobs:
  check_for_test_file_changes:
    name: Check for test file changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Get changed test files
        id: get_changed_test_files
        run: |
          CHANGED_FILES=''
          if [ -n "$CHANGED_FILES" ]
          then
            echo "Test files changed:"
            echo "$CHANGED_FILES"
            echo "::set-output name=changed_test_files::${CHANGED_FILES}"
          else
            echo "No test files changed."
          fi
  run_tests:
    needs: check_for_test_file_changes
    if: ${{ needs.check_for_test_file_changes.outputs.changed_test_files }}
    env:
      CI: true
      SYS_ADMIN_USERNAME: ${{ secrets.SYS_ADMIN_USERNAME }}
      SYS_ADMIN_PASSWORD: ${{ secrets.SYS_ADMIN_PASSWORD }}
      SYS_ADMIN_FIRST_NAME: ${{ secrets.SYS_ADMIN_FIRST_NAME }}
      SYS_ADMIN_LAST_NAME: ${{ secrets.SYS_ADMIN_LAST_NAME }}
      SYS_ADMIN_EMAIL: ${{ secrets.SYS_ADMIN_EMAIL }}
      TEST_ENV: PROD
      PROD_INSTANCE_URL: ${{ secrets.PROD_INSTANCE_URL }}
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.39.0-jammy
    strategy:
      fail-fast: false
      matrix:
        project: [chrome, edge]
        shard: [1/10, 2/10, 3/10, 4/10, 5/10, 6/10, 7/10, 8/10, 9/10, 10/10]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install dependencies
        run: npm ci
      - name: Run your tests
        run: |
          echo "Running tests for ${{ matrix.project }} shard ${{ matrix.shard }}"
          npx playwright test ${{ needs.check_for_test_file_changes.outputs.changed_test_files }} --project=${{ matrix.project }} --shard=${{ matrix.shard }} --repeat-each=3
      - name: Rename blob-reports
        run: for file in blob-report/*; do [ -f "$file" ] && mv "$file" "blob-report/${{ matrix.project }}-$(basename "$file")"; done
      - name: Upload blob report'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: all-blob-reports
          path: blob-report
          retention-days: 1
  merge_reports_and_publish:
    name: 'Merge Reports and Upload'
    needs: run_tests
    if: ${{ needs.run_tests.result != 'skipped' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install dependencies
        run: npm ci
      - name: Download blob reports
        uses: actions/download-artifact@v3
        with:
          name: all-blob-reports
          path: all-blob-reports
      - name: Rename reports
        run: count=1; for file in $(find ./all-blob-reports -maxdepth 1 -type f -name "*.zip"); do mv "$file" "all-blob-reports/report-$count.zip"; count=$((count+1)); done
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: html-report-attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 90
